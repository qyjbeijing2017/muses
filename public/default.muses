Shader "Default" {
    Properties {
        _DiffuseTex ("Diffuse", 2D) = "./white.jpg" {}
        _Border ("Border", Color) = (0.,1.,0.,1.)
    }
    
    SubShader {
        Pass {
            // renderstate
            
            // Cull OFF
            ZWrite OFF

            // glsl        
            GLSLPROGRAM
            #include "muses.glsl"

            void vert() {
                mat4 scaleMatrix = mat4(1.02);
                scaleMatrix[3][3] = 1.0;
                gl_Position = MUSES_MATRIX_MVP * scaleMatrix * MUSES_POSITION;
            }
            
            void frag() {
                gl_FragColor = _Border;
            }

            ENDGLSL
        }

        Pass {
            // renderstate

            // glsl
            GLSLPROGRAM
            #include "muses.glsl"

            varying vec4 FragPos;
            varying vec3 vNormal;
            varying vec2 vTexCoords;
            varying vec4 pos;

            void vert() {
                pos = MUSES_POSITION;
                FragPos = MUSES_MATRIX_M * MUSES_POSITION;
                vNormal = MUSES_NORMAL;
                vTexCoords = MUSES_TEXCOORD0;
                gl_Position = MUSES_MATRIX_MVP * MUSES_POSITION;
            }
            
            void frag() {
                vec3 I = normalize(FragPos.xyz - MUSES_CAMERA_POS);
                vec3 R = reflect(I, normalize(vNormal));
                vec3 RColor = textureCube(MUSES_SKYBOX, R).rgb;

                vec3 result = texture2D(_DiffuseTex ,vTexCoords).xyz *  MusesLightAll(FragPos, normalize(vNormal));
                gl_FragColor = vec4(RColor,1.);
            }

            ENDGLSL
        }
    }

    FallBack "Diffuse"
}